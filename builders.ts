/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TValue {
  [k: string]: unknown;
}

export function TValueBuilder() {
  const data: TValue = {};

  return {
    build() {
      return this;
    },
  };
} /* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ISav {
  [k: string]: unknown;
}

export function ISavBuilder() {
  const data: ISav = {
    id: "",
    ts: "",
    name: "",
    display_name: "",
    value: "",
    topic: "",
    sign: "",
  };

  return {
    withId(id: string) {
      data.id = id;
      return this;
    },
    withTs(ts: string) {
      data.ts = ts;
      return this;
    },
    withName(name: string) {
      data.name = name;
      return this;
    },
    withDisplay_name(display_name: string) {
      data.display_name = display_name;
      return this;
    },
    withValue(value: unknown) {
      data.value = value;
      return this;
    },
    withTopic(topic: string) {
      data.topic = topic;
      return this;
    },
    withItems(items: array) {
      data.items = items;
      return this;
    },
    withAttributes(attributes: array) {
      data.attributes = attributes;
      return this;
    },
    withSign(sign: boolean) {
      data.sign = sign;
      return this;
    },
    build() {
      return this;
    },
  };
} /* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface IRawQuestionnaire {
  [k: string]: unknown;
}

export function IRawQuestionnaireBuilder() {
  const data: IRawQuestionnaire = { id: "" };

  return {
    withVersion(version: number) {
      data.version = version;
      return this;
    },
    withItems(items: unknown) {
      data.items = items;
      return this;
    },
    withType(type: unknown) {
      data.type = type;
      return this;
    },
    withStart_time(start_time: number) {
      data.start_time = start_time;
      return this;
    },
    withEnd_time(end_time: number) {
      data.end_time = end_time;
      return this;
    },
    withIn_progress(in_progress: boolean) {
      data.in_progress = in_progress;
      return this;
    },
    withName(name: unknown) {
      data.name = name;
      return this;
    },
    withId(id: unknown) {
      data.id = id;
      return this;
    },
    withAssociated_message_id(associated_message_id: string) {
      data.associated_message_id = associated_message_id;
      return this;
    },
    withVisit_id(visit_id: unknown) {
      data.visit_id = visit_id;
      return this;
    },
    build() {
      return this;
    },
  };
} /* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ICondition {
  [k: string]: unknown;
}

export function IConditionBuilder() {
  const data: ICondition = {
    probability: "",
    is_severe: "",
    id: "",
    name: "",
    condition_group: "",
    icd10_code: "",
  };

  return {
    withProbability(probability: number) {
      data.probability = probability;
      return this;
    },
    withIs_severe(is_severe: boolean) {
      data.is_severe = is_severe;
      return this;
    },
    withId(id: string) {
      data.id = id;
      return this;
    },
    withName(name: string) {
      data.name = name;
      return this;
    },
    withCondition_group(condition_group: string) {
      data.condition_group = condition_group;
      return this;
    },
    withIcd10_code(icd10_code: array) {
      data.icd10_code = icd10_code;
      return this;
    },
    build() {
      return this;
    },
  };
} /* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INestedMedicalConversation {
  [k: string]: unknown;
}

export function INestedMedicalConversationBuilder() {
  const data: INestedMedicalConversation = {};

  return {
    withSavs(savs: array) {
      data.savs = savs;
      return this;
    },
    withQuestionnaires(questionnaires: array) {
      data.questionnaires = questionnaires;
      return this;
    },
    withConditions(conditions: array) {
      data.conditions = conditions;
      return this;
    },
    build() {
      return this;
    },
  };
} /* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface IGetConversationNestedResponse {
  [k: string]: unknown;
}

export function IGetConversationNestedResponseBuilder() {
  const data: IGetConversationNestedResponse = { userResponse: "" };

  return {
    withUserResponse(userResponse: object) {
      data.userResponse = userResponse;
      return this;
    },
    build() {
      return this;
    },
  };
}
